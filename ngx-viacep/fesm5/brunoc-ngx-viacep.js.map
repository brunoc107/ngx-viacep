{"version":3,"file":"brunoc-ngx-viacep.js.map","sources":["ng://@brunoc/ngx-viacep/lib/model/error-values.enum.ts","ng://@brunoc/ngx-viacep/lib/model/erro-cep.ts","ng://@brunoc/ngx-viacep/lib/ngx-viacep.service.ts","ng://@brunoc/ngx-viacep/lib/ngx-viacep.module.ts"],"sourcesContent":["export enum ErrorValues {\n  CEP_NAO_ENCONTRADO,\n  CEP_VAZIO,\n  CEP_INVALIDO,\n  CEP_MUITO_CURTO,\n  CEP_MUITO_LONGO,\n  UF_VAZIA,\n  UF_MUITO_CURTA,\n  UF_MUITO_LONGA,\n  UF_NAO_EXISTE,\n  MUNICIPIO_VAZIO,\n  MUNICIPIO_MUITO_CURTO,\n  LOGRADOURO_VAZIO,\n  LOGRADOURO_MUITO_CURTO,\n  ERRO_SERVIDOR\n}\n","import {ErrorValues} from './error-values.enum';\n\nexport class ErroCep extends Error {\n\n  constructor( private errorCode: ErrorValues ) {\n\n    super(ErrorValues[errorCode]);\n\n    Object.setPrototypeOf(this, ErroCep.prototype);\n  }\n\n  /**\n   * Returns the Error code\n   */\n  public getCode(): ErrorValues {\n    return this.errorCode;\n  }\n\n  /**\n   * Compares the thrown error type with an ErrorValues enum item\n   * @param type\n   */\n  public ofType(type: ErrorValues): boolean {\n    return this.getCode() === type;\n  }\n}\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {Endereco} from './model/endereco';\nimport {ErroCep} from './model/erro-cep';\nimport {Observable} from 'rxjs';\nimport {ErrorValues} from './model/error-values.enum';\n\nconst BASE_URL = 'https://viacep.com.br/ws';\n\nconst VALID_UFS: string[] = [\n  'AC', 'AL', 'AM', 'AP', 'BA', 'CE', 'DF', 'ES', 'GO',\n  'MA', 'MG', 'MS', 'MT', 'PA', 'PB', 'PE', 'PI', 'PR',\n  'RJ', 'RN', 'RO', 'RR', 'RS', 'SC', 'SE', 'SP', 'TO'];\n\n@Injectable()\nexport class NgxViacepService {\n\n  constructor(private http: HttpClient) {}\n\n  private static throwCepError(error: ErrorValues) {\n    throw new ErroCep(error);\n  }\n\n  private static validateCep(cep: string): void {\n\n    const regex = new RegExp(/^[0-9]+$/);\n    if (NgxViacepService.stringIsEmpty(cep)) {\n      NgxViacepService.throwCepError(ErrorValues.CEP_VAZIO);\n    } else if (!regex.test(cep)) {\n      NgxViacepService.throwCepError(ErrorValues.CEP_INVALIDO);\n    } else if (cep.length < 8) {\n      NgxViacepService.throwCepError(ErrorValues.CEP_MUITO_CURTO);\n    } else if (cep.length > 8) {\n      NgxViacepService.throwCepError(ErrorValues.CEP_MUITO_LONGO);\n    }\n  }\n\n  private static clearCep(cep: string): string {\n\n    const cepStr = `${cep}`;\n    return cepStr.replace('.', '').replace('-', '');\n  }\n\n  private static stringIsEmpty(data: string): boolean {\n\n    return (\n      data.trim() === '' ||\n      data === null ||\n      typeof data === 'undefined'\n    );\n  }\n\n  private static stringHasMinimumLength(data: string, minLength: number): boolean {\n\n    return data.trim().length >= minLength;\n  }\n\n  private static stringHasMaximumLength(data: string, maxLength: number): boolean {\n\n    return data.trim().length <= maxLength;\n  }\n\n  private static ufExists(uf: string): boolean {\n\n    return VALID_UFS.indexOf(uf.toLocaleUpperCase()) > -1;\n  }\n\n  private static validateState(province: string): void {\n\n    if (NgxViacepService.stringIsEmpty(province)) {\n      NgxViacepService.throwCepError(ErrorValues.UF_VAZIA);\n    }\n\n    if (!NgxViacepService.stringHasMinimumLength(province, 2)) {\n      NgxViacepService.throwCepError(ErrorValues.UF_MUITO_CURTA);\n    }\n\n    if (!NgxViacepService.stringHasMaximumLength(province, 2)) {\n      NgxViacepService.throwCepError(ErrorValues.UF_MUITO_LONGA);\n    }\n\n    if (!NgxViacepService.ufExists(province)) {\n      NgxViacepService.throwCepError(ErrorValues.UF_NAO_EXISTE);\n    }\n  }\n\n  private static validateTown(town: string): void {\n\n    if (NgxViacepService.stringIsEmpty(town)) {\n      NgxViacepService.throwCepError(ErrorValues.MUNICIPIO_VAZIO);\n    }\n\n    if (!NgxViacepService.stringHasMinimumLength(town, 3)) {\n      NgxViacepService.throwCepError(ErrorValues.MUNICIPIO_MUITO_CURTO);\n    }\n  }\n\n  private static validateStreet(street: string): void {\n\n    if (NgxViacepService.stringIsEmpty(street)) {\n      NgxViacepService.throwCepError(ErrorValues.LOGRADOURO_VAZIO);\n    }\n\n    if (!NgxViacepService.stringHasMinimumLength(street, 3)) {\n      NgxViacepService.throwCepError(ErrorValues.LOGRADOURO_MUITO_CURTO);\n    }\n  }\n\n  private findByCep(cep: string): Observable<Endereco> {\n\n    const url = `${BASE_URL}/${cep}/json`;\n\n    return this.http.get<Endereco>(url);\n  }\n\n  private searchAddress(state: string, town: string, street: string): Observable<Array<Endereco>> {\n\n    const url = `${BASE_URL}/${state}/${town}/${street}/json`;\n\n    return this.http.get<Array<Endereco>>(url);\n  }\n\n  /**\n   * Busca o endereÃ§o a partir do CEP\n   * @param cep\n   */\n  buscarPorCep(cep: string): Promise<Endereco> {\n\n    return new Promise<Endereco>((resolve, reject) => {\n\n      const cleanCep = NgxViacepService.clearCep(cep);\n\n      NgxViacepService.validateCep(cleanCep);\n\n      this.findByCep(cleanCep).toPromise().then((endereco: Endereco) => {\n        if ( 'cep' in endereco ) {\n          resolve(endereco);\n        } else {\n          reject(new ErroCep(ErrorValues.CEP_NAO_ENCONTRADO));\n        }\n      }).catch(() => {\n        reject(new ErroCep(ErrorValues.ERRO_SERVIDOR));\n      });\n    });\n  }\n\n  /**\n   * Faz a busca aproximada\n   * @param ufSigla\n   * @param municipio\n   * @param logradouro\n   */\n  buscarPorEndereco(ufSigla: string, municipio: string, logradouro: string): Promise<Array<Endereco>> {\n\n    return new Promise<Array<Endereco>>((resolve, reject) => {\n\n      NgxViacepService.validateState(ufSigla);\n\n      NgxViacepService.validateTown(municipio);\n\n      NgxViacepService.validateStreet(logradouro);\n\n      this.searchAddress(ufSigla, municipio, logradouro).toPromise().then((enderecos: Array<Endereco>) => {\n        resolve(enderecos);\n      }).catch(() => {\n        reject(new ErroCep(ErrorValues.ERRO_SERVIDOR));\n      });\n    });\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { NgxViacepService } from './ngx-viacep.service';\nimport { HttpClientModule } from '@angular/common/http';\n\n@NgModule({\n  imports: [\n    HttpClientModule\n  ],\n  declarations: [],\n  exports: [],\n  providers: [\n    NgxViacepService\n  ]\n})\nexport class NgxViacepModule { }\n"],"names":["tslib_1.__extends"],"mappings":"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"}
